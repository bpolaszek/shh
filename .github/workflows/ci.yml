name: CI Workflow

on:
  push:
  pull_request:

jobs:
  phpstan:
    name: Code Analysis
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ matrix.php }}-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-${{ matrix.symfony }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Check code style
        run: ./vendor/bin/phpcs --standard=psr2 -n src/

      - name: Run analysis
        run: ./vendor/bin/phpstan analyse

  tests:
    name: Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ matrix.php }}-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-${{ matrix.symfony }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run tests
        run: |
          mkdir -p build/logs
          ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
